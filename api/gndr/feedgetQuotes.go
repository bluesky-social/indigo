// Code generated by cmd/lexgen (see Makefile's lexgen); DO NOT EDIT.

package gndr

// schema: gndr.app.feed.getQuotes

import (
	"context"

	"github.com/gander-social/gander-indigo-sovereign/lex/util"
)

// FeedGetQuotes_Output is the output of a gndr.app.feed.getQuotes call.
type FeedGetQuotes_Output struct {
	Cid    *string              `json:"cid,omitempty" cborgen:"cid,omitempty"`
	Cursor *string              `json:"cursor,omitempty" cborgen:"cursor,omitempty"`
	Posts  []*FeedDefs_PostView `json:"posts" cborgen:"posts"`
	Uri    string               `json:"uri" cborgen:"uri"`
}

// FeedGetQuotes calls the XRPC method "gndr.app.feed.getQuotes".
//
// cid: If supplied, filters to quotes of specific version (by CID) of the post record.
// uri: Reference (AT-URI) of post record
func FeedGetQuotes(ctx context.Context, c util.LexClient, cid string, cursor string, limit int64, uri string) (*FeedGetQuotes_Output, error) {
	var out FeedGetQuotes_Output

	params := map[string]interface{}{}
	if cid != "" {
		params["cid"] = cid
	}
	if cursor != "" {
		params["cursor"] = cursor
	}
	if limit != 0 {
		params["limit"] = limit
	}
	params["uri"] = uri
	if err := c.LexDo(ctx, util.Query, "", "gndr.app.feed.getQuotes", params, nil, &out); err != nil {
		return nil, err
	}

	return &out, nil
}
