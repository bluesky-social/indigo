// Code generated by cmd/lexgen (see Makefile's lexgen); DO NOT EDIT.

package gndr

// schema: gndr.app.actor.searchActors

import (
	"context"

	"github.com/gander-social/gander-indigo-sovereign/lex/util"
)

// ActorSearchActors_Output is the output of a gndr.app.actor.searchActors call.
type ActorSearchActors_Output struct {
	Actors []*ActorDefs_ProfileView `json:"actors" cborgen:"actors"`
	Cursor *string                  `json:"cursor,omitempty" cborgen:"cursor,omitempty"`
}

// ActorSearchActors calls the XRPC method "gndr.app.actor.searchActors".
//
// q: Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.
// term: DEPRECATED: use 'q' instead.
func ActorSearchActors(ctx context.Context, c util.LexClient, cursor string, limit int64, q string, term string) (*ActorSearchActors_Output, error) {
	var out ActorSearchActors_Output

	params := map[string]interface{}{}
	if cursor != "" {
		params["cursor"] = cursor
	}
	if limit != 0 {
		params["limit"] = limit
	}
	if q != "" {
		params["q"] = q
	}
	if term != "" {
		params["term"] = term
	}
	if err := c.LexDo(ctx, util.Query, "", "gndr.app.actor.searchActors", params, nil, &out); err != nil {
		return nil, err
	}

	return &out, nil
}
