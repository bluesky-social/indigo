// Code generated by cmd/lexgen (see Makefile's lexgen); DO NOT EDIT.

package gndr

// schema: gndr.app.graph.searchStarterPacks

import (
	"context"

	"github.com/gander-social/gander-indigo-sovereign/lex/util"
)

// GraphSearchStarterPacks_Output is the output of a gndr.app.graph.searchStarterPacks call.
type GraphSearchStarterPacks_Output struct {
	Cursor       *string                           `json:"cursor,omitempty" cborgen:"cursor,omitempty"`
	StarterPacks []*GraphDefs_StarterPackViewBasic `json:"starterPacks" cborgen:"starterPacks"`
}

// GraphSearchStarterPacks calls the XRPC method "gndr.app.graph.searchStarterPacks".
//
// q: Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.
func GraphSearchStarterPacks(ctx context.Context, c util.LexClient, cursor string, limit int64, q string) (*GraphSearchStarterPacks_Output, error) {
	var out GraphSearchStarterPacks_Output

	params := map[string]interface{}{}
	if cursor != "" {
		params["cursor"] = cursor
	}
	if limit != 0 {
		params["limit"] = limit
	}
	params["q"] = q
	if err := c.LexDo(ctx, util.Query, "", "gndr.app.graph.searchStarterPacks", params, nil, &out); err != nil {
		return nil, err
	}

	return &out, nil
}
