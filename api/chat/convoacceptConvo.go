// Code generated by cmd/lexgen (see Makefile's lexgen); DO NOT EDIT.

package chat

// schema: chat.bsky.convo.acceptConvo

import (
	"context"

	"github.com/bluesky-social/indigo/lex/util"
)

// ConvoAcceptConvo_Input is the input argument to a chat.bsky.convo.acceptConvo call.
type ConvoAcceptConvo_Input struct {
	ConvoId string `json:"convoId" cborgen:"convoId"`
}

// ConvoAcceptConvo_Output is the output of a chat.bsky.convo.acceptConvo call.
type ConvoAcceptConvo_Output struct {
	// rev: Rev when the convo was accepted. If not present, the convo was already accepted.
	Rev *string `json:"rev,omitempty" cborgen:"rev,omitempty"`
}

// ConvoAcceptConvo calls the XRPC method "chat.bsky.convo.acceptConvo".
func ConvoAcceptConvo(ctx context.Context, c util.LexClient, input *ConvoAcceptConvo_Input) (*ConvoAcceptConvo_Output, error) {
	var out ConvoAcceptConvo_Output
	if err := c.LexDo(ctx, util.Procedure, "application/json", "chat.bsky.convo.acceptConvo", nil, input, &out); err != nil {
		return nil, err
	}

	return &out, nil
}
