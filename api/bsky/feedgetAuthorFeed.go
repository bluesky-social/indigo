// Code generated by cmd/lexgen (see Makefile's lexgen); DO NOT EDIT.

package bsky

// schema: app.bsky.feed.getAuthorFeed

import (
	"context"

	"github.com/bluesky-social/indigo/lex/util"
)

// FeedGetAuthorFeed_Output is the output of a app.bsky.feed.getAuthorFeed call.
type FeedGetAuthorFeed_Output struct {
	Cursor *string                  `json:"cursor,omitempty" cborgen:"cursor,omitempty"`
	Feed   []*FeedDefs_FeedViewPost `json:"feed" cborgen:"feed"`
}

// FeedGetAuthorFeed calls the XRPC method "app.bsky.feed.getAuthorFeed".
//
// filter: Combinations of post/repost types to include in response.
func FeedGetAuthorFeed(ctx context.Context, c util.LexClient, actor string, cursor string, filter string, includePins bool, limit int64) (*FeedGetAuthorFeed_Output, error) {
	var out FeedGetAuthorFeed_Output

	params := map[string]interface{}{}
	params["actor"] = actor
	if cursor != "" {
		params["cursor"] = cursor
	}
	if filter != "" {
		params["filter"] = filter
	}
	if includePins {
		params["includePins"] = includePins
	}
	if limit != 0 {
		params["limit"] = limit
	}
	if err := c.LexDo(ctx, util.Query, "", "app.bsky.feed.getAuthorFeed", params, nil, &out); err != nil {
		return nil, err
	}

	return &out, nil
}
